{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","listElements","querySelectorAll","sortList","data","dataArr","convertToNumber","stringValue","dataset","salary","slice","split","join","sort","prev","next","append","getEmployees","map","employee","name","textContent"],"mappings":";AAAA,aAyBA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvBA,IAAMA,EAAOC,SAASC,cAAc,MAC9BC,EAAeF,SAASG,iBAAiB,MAE/C,SAASC,EAASC,GACVC,IAAAA,EAAcD,EAAAA,GAEdE,EAAkB,SAACC,GAChB,OAACA,EAAYC,QAAQC,OAAOC,MAAM,GAAGC,MAAM,KAAKC,KAAK,KAG9DP,EAAQQ,KAAK,SAACC,EAAMC,GAAST,OAAAA,EAAgBS,GAAQT,EAAgBQ,KAErEhB,EAAKkB,OAALlB,MAAAA,EAAeO,EAAAA,IAGjB,SAASY,EAAab,GACb,OAAA,EAAIA,GAAMc,IAAI,SAACC,GAAD,OAAA,EAAA,CACnBC,KAAMD,EAASE,aACZF,EAASX,WAIhBL,EAASF,GACTgB,EAAahB","file":"main.a9292f98.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\nconst listElements = document.querySelectorAll('li');\n\nfunction sortList(data) {\n  const dataArr = [...data];\n\n  const convertToNumber = (stringValue) => {\n    return +stringValue.dataset.salary.slice(1).split(',').join('');\n  };\n\n  dataArr.sort((prev, next) => convertToNumber(next) - convertToNumber(prev));\n\n  list.append(...dataArr);\n}\n\nfunction getEmployees(data) {\n  return [...data].map((employee) => ({\n    name: employee.textContent,\n    ...employee.dataset,\n  }));\n}\n\nsortList(listElements);\ngetEmployees(listElements);\n"]}